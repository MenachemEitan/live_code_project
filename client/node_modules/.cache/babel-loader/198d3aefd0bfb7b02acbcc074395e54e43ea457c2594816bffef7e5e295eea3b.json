{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\menahemeitan\\\\Desktop\\\\live_code_project\\\\live_code_project\\\\client\\\\src\\\\components\\\\session\\\\student\\\\student.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/vs2015.css';\nimport './student.css';\nimport { Link } from 'react-router-dom';\nimport { useContext, useMemo } from 'react';\nimport { SessionContext } from '../../../sessionContext';\n\n// const StudentSession = () => {\n//     const sessionDet = useContext(SessionContext)\n//     const socket = new WebSocket(`ws://localhost:4000/session?name=${sessionDet.session}`);\n//     socket.addEventListener('open', function (event) {\n//         console.log('session is connected to ws server');\n//     });\n//     socket.addEventListener('message', function (event) {\n//         console.log(`message from server ${event.data}`);\n//         hljs.highlightBlock(ref.current,{\n//             lineNodes: true,\n//         });\n//     });\n//     const language = \"js\"\n//     const initialCode = \"Loading code\"\n//     const ref = useRef(null);\n//     const [code, setCode] = useState(initialCode);\n\n//     // useEffect(() => {\n//     //     hljs.highlightBlock(ref.current,{\n//     //         lineNodes: true,\n//     //     });\n//     // }, [code]);\n//     useEffect(() => {\n//         socket.addEventListener('message', function (event) {\n//             setCode(event.data);\n//         });\n\n//     }, []);\n\n//     const sendMassage = (text) => {\n//         socket.send(text)\n//     }\n\n//     const handleCodeChange = e => {\n//         console.log(e.target.innerText);\n//         // setCode(e.target.textContent);\n//         socket.send(e.target.innerText)\n\n//     }\n//     return (\n//         <div className='session'>\n//             <pre>\n//                 <code ref={ref} className={`hljs ${language}`} contentEditable\n//                     onInput={handleCodeChange}>\n//                     {code}\n//                 </code>\n//             </pre>\n//             <Link to={'/'} className=\"big-beautiful-button\" >Return</Link>\n\n//         </div>\n//     );\n// };\n\n// export default StudentSession;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentSession = () => {\n  _s();\n  const sessionDet = useContext(SessionContext);\n  const socket = new WebSocket(`ws://localhost:4000/session?name=${sessionDet.session}`);\n  socket.addEventListener('open', function (event) {\n    console.log('session is connected to ws server');\n  });\n  socket.addEventListener('message', function (event) {\n    console.log(`message from server ${event.data}`);\n  });\n  const language = \"js\";\n  const initialCode = \"Loading code\";\n  const ref = useRef(null);\n  const [code, setCode] = useState(initialCode);\n  const highlightedCode = useMemo(() => {\n    hljs.highlightBlock(ref.current, {\n      lineNodes: true\n    });\n    return code;\n  }, [code, ref]);\n  useEffect(() => {\n    socket.addEventListener('message', function (event) {\n      setCode(event.data);\n    });\n  }, []);\n  const sendMassage = text => {\n    socket.send(text);\n  };\n  const handleCodeChange = e => {\n    console.log(e.target.innerText);\n    // setCode(e.target.textContent);\n    socket.send(e.target.innerText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"session\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        ref: ref,\n        className: `hljs ${language}`,\n        contentEditable: true,\n        onInput: handleCodeChange,\n        children: highlightedCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/',\n      className: \"big-beautiful-button\",\n      children: \"Return\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentSession, \"qBAXhz0EVlZbINze+KUujUJFcVM=\");\n_c = StudentSession;\nexport default StudentSession;\nvar _c;\n$RefreshReg$(_c, \"StudentSession\");","map":{"version":3,"names":["React","useRef","useEffect","useState","hljs","Link","useContext","useMemo","SessionContext","StudentSession","sessionDet","socket","WebSocket","session","addEventListener","event","console","log","data","language","initialCode","ref","code","setCode","highlightedCode","highlightBlock","current","lineNodes","sendMassage","text","send","handleCodeChange","e","target","innerText"],"sources":["C:/Users/menahemeitan/Desktop/live_code_project/live_code_project/client/src/components/session/student/student.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport hljs from 'highlight.js';\r\nimport 'highlight.js/styles/vs2015.css';\r\nimport './student.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext, useMemo } from 'react';\r\nimport { SessionContext } from '../../../sessionContext';\r\n\r\n// const StudentSession = () => {\r\n//     const sessionDet = useContext(SessionContext)\r\n//     const socket = new WebSocket(`ws://localhost:4000/session?name=${sessionDet.session}`);\r\n//     socket.addEventListener('open', function (event) {\r\n//         console.log('session is connected to ws server');\r\n//     });\r\n//     socket.addEventListener('message', function (event) {\r\n//         console.log(`message from server ${event.data}`);\r\n//         hljs.highlightBlock(ref.current,{\r\n//             lineNodes: true,\r\n//         });\r\n//     });\r\n//     const language = \"js\"\r\n//     const initialCode = \"Loading code\"\r\n//     const ref = useRef(null);\r\n//     const [code, setCode] = useState(initialCode);\r\n\r\n//     // useEffect(() => {\r\n//     //     hljs.highlightBlock(ref.current,{\r\n//     //         lineNodes: true,\r\n//     //     });\r\n//     // }, [code]);\r\n//     useEffect(() => {\r\n//         socket.addEventListener('message', function (event) {\r\n//             setCode(event.data);\r\n//         });\r\n\r\n//     }, []);\r\n\r\n//     const sendMassage = (text) => {\r\n//         socket.send(text)\r\n//     }\r\n\r\n//     const handleCodeChange = e => {\r\n//         console.log(e.target.innerText);\r\n//         // setCode(e.target.textContent);\r\n//         socket.send(e.target.innerText)\r\n\r\n//     }\r\n//     return (\r\n//         <div className='session'>\r\n//             <pre>\r\n//                 <code ref={ref} className={`hljs ${language}`} contentEditable\r\n//                     onInput={handleCodeChange}>\r\n//                     {code}\r\n//                 </code>\r\n//             </pre>\r\n//             <Link to={'/'} className=\"big-beautiful-button\" >Return</Link>\r\n\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default StudentSession;\r\n\r\n\r\nconst StudentSession = () => {\r\n    const sessionDet = useContext(SessionContext)\r\n    const socket = new WebSocket(`ws://localhost:4000/session?name=${sessionDet.session}`);\r\n    socket.addEventListener('open', function (event) {\r\n        console.log('session is connected to ws server');\r\n    });\r\n    socket.addEventListener('message', function (event) {\r\n        console.log(`message from server ${event.data}`);\r\n    });\r\n    const language = \"js\"\r\n    const initialCode = \"Loading code\"\r\n    const ref = useRef(null);\r\n    const [code, setCode] = useState(initialCode);\r\n    const highlightedCode = useMemo(() => {\r\n        hljs.highlightBlock(ref.current,{\r\n            lineNodes: true,\r\n        });\r\n        return code;\r\n    }, [code, ref]);\r\n\r\n    useEffect(() => {\r\n        socket.addEventListener('message', function (event) {\r\n            setCode(event.data);\r\n        });\r\n\r\n    }, []);\r\n\r\n    const sendMassage = (text) => {\r\n        socket.send(text)\r\n    }\r\n\r\n    const handleCodeChange = e => {\r\n        console.log(e.target.innerText);\r\n        // setCode(e.target.textContent);\r\n        socket.send(e.target.innerText)\r\n\r\n    }\r\n    return (\r\n        <div className='session'>\r\n            <pre>\r\n                <code ref={ref} className={`hljs ${language}`} contentEditable\r\n                    onInput={handleCodeChange}>\r\n                    {highlightedCode}\r\n                </code>\r\n            </pre>\r\n            <Link to={'/'} className=\"big-beautiful-button\" >Return</Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentSession;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}